using System;

namespace ConsoleApp1
{
    // 객체 (OOP Object Oriented Programming)
    
    // Knight 
    // 속성 : hp, attack, pos
    // 기능 : Move, Attack, Die
    // Ref, 참조 함수를 받으면 변수값이 변함
    class Knight
    {
        public int hp;
        public int attack;

        public Knight Clone() // deepcopy
        {
            Knight knight = new Knight();
            knight.hp = hp;
            knight.attack = attack;
            return knight;
        }

        public void Move()
        {
            Console.WriteLine("Knight Move");
        }
        public void Attack()
        {
            Console.WriteLine("Knight Attack");
        }
    }

    // 복사 함수를 받아도 함수에서만 값이 변함
    struct Mage
    {
        public int hp;
        public int attack;
    }

    class Program
    {
         static void KillMage(Mage mage)
        {
            mage.hp = 0;
        }

        static void KillKnight(Knight knight)
        {
            knight.hp = 0;
        }
        // 절차(proceduer) 지향 textrpg 함수를 순서대로 넣는 것,
        // 방대해질수록 유지 보수가 힘들어짐
        static void Main(string[] args)
        {
            Mage mage;
            mage.hp = 100;
            mage.attack = 50;

            Mage mage2 = mage;
            mage2.hp = 0;

            Knight knight = new Knight();
            knight.hp = 100;
            knight.attack = 10;

            knight.Move();
            knight.Attack();

            Knight knight2 = knight.Clone();
            knight2.hp = 0;
        }
    }
}
